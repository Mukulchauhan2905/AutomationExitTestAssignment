<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="17" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-16T23:32:20 IST" name="Surefire suite" finished-at="2024-06-16T23:35:17 IST" duration-ms="176860">
    <groups>
    </groups>
    <test started-at="2024-06-16T23:32:20 IST" name="Surefire test" finished-at="2024-06-16T23:35:17 IST" duration-ms="176860">
      <class name="testcases.CheckPaginationTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.CheckPaginationTest@531c311e]" started-at="2024-06-16T23:32:41 IST" name="setup" finished-at="2024-06-16T23:32:45 IST" duration-ms="3852" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CheckPaginationTest.checkPagination()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkPagination()[pri:0, instance:testcases.CheckPaginationTest@531c311e]" started-at="2024-06-16T23:32:45 IST" name="checkPagination" finished-at="2024-06-16T23:32:50 IST" duration-ms="4968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPagination -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.CheckPaginationTest@531c311e]" started-at="2024-06-16T23:32:50 IST" name="getResult" finished-at="2024-06-16T23:32:50 IST" duration-ms="424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPagination status=SUCCESS method=CheckPaginationTest.checkPagination()[pri:0, instance:testcases.CheckPaginationTest@531c311e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.CheckPaginationTest -->
      <class name="testcases.UpdateCartCountTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.UpdateCartCountTest@7b324585]" started-at="2024-06-16T23:34:32 IST" name="setup" finished-at="2024-06-16T23:34:36 IST" duration-ms="4105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.UpdateCartCountTest.updateCartCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateCartCount()[pri:0, instance:testcases.UpdateCartCountTest@7b324585]" started-at="2024-06-16T23:34:36 IST" name="updateCartCount" finished-at="2024-06-16T23:34:43 IST" duration-ms="6570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCartCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.UpdateCartCountTest@7b324585]" started-at="2024-06-16T23:34:43 IST" name="getResult" finished-at="2024-06-16T23:34:43 IST" duration-ms="238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateCartCount status=SUCCESS method=UpdateCartCountTest.updateCartCount()[pri:0, instance:testcases.UpdateCartCountTest@7b324585] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.UpdateCartCountTest -->
      <class name="testcases.CheckMoreTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.CheckMoreTest@60d1a32f]" started-at="2024-06-16T23:32:35 IST" name="setup" finished-at="2024-06-16T23:32:39 IST" duration-ms="4060" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CheckMoreTest.checkMore()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkMore()[pri:0, instance:testcases.CheckMoreTest@60d1a32f]" started-at="2024-06-16T23:32:39 IST" name="checkMore" finished-at="2024-06-16T23:32:41 IST" duration-ms="1608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMore -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.CheckMoreTest@60d1a32f]" started-at="2024-06-16T23:32:41 IST" name="getResult" finished-at="2024-06-16T23:32:41 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMore status=SUCCESS method=CheckMoreTest.checkMore()[pri:0, instance:testcases.CheckMoreTest@60d1a32f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.CheckMoreTest -->
      <class name="testcases.ValidateRatingsTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.ValidateRatingsTest@60dce7ea]" started-at="2024-06-16T23:34:52 IST" name="setup" finished-at="2024-06-16T23:34:58 IST" duration-ms="5431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ValidateRatingsTest.validateRatings()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateRatings()[pri:0, instance:testcases.ValidateRatingsTest@60dce7ea]" started-at="2024-06-16T23:34:58 IST" name="validateRatings" finished-at="2024-06-16T23:35:07 IST" duration-ms="9504" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":".Y1HWO0"}
  (Session info: chrome=125.0.6422.142)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [cda6d16a2393784c85e98e60e41fe8ab, findElement {using=class name, value=Y1HWO0}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.142, chrome: {chromedriverVersion: 125.0.6422.141 (4b1e8393712..., userDataDir: C:\Users\MUKULC~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61206}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61206/devtoo..., se:cdpVersion: 125.0.6422.142, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: cda6d16a2393784c85e98e60e41fe8ab]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".Y1HWO0"}
  (Session info: chrome=125.0.6422.142)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [cda6d16a2393784c85e98e60e41fe8ab, findElement {using=class name, value=Y1HWO0}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.142, chrome: {chromedriverVersion: 125.0.6422.141 (4b1e8393712..., userDataDir: C:\Users\MUKULC~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61206}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61206/devtoo..., se:cdpVersion: 125.0.6422.142, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: cda6d16a2393784c85e98e60e41fe8ab
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at pages.ProductPage.getRating(ProductPage.java:34)
at testcases.ValidateRatingsTest.validateRatings(ValidateRatingsTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRatings -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.ValidateRatingsTest@60dce7ea]" started-at="2024-06-16T23:35:07 IST" name="getResult" finished-at="2024-06-16T23:35:08 IST" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRatings status=FAILURE method=ValidateRatingsTest.validateRatings()[pri:0, instance:testcases.ValidateRatingsTest@60dce7ea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.ValidateRatingsTest -->
      <class name="testcases.GiftCardPageTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.GiftCardPageTest@40c80397]" started-at="2024-06-16T23:33:15 IST" name="setup" finished-at="2024-06-16T23:33:19 IST" duration-ms="4047" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GiftCardPageTest.giftCardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="giftCardPage()[pri:0, instance:testcases.GiftCardPageTest@40c80397]" started-at="2024-06-16T23:33:19 IST" name="giftCardPage" finished-at="2024-06-16T23:33:25 IST" duration-ms="5952" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- giftCardPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.GiftCardPageTest@40c80397]" started-at="2024-06-16T23:33:25 IST" name="getResult" finished-at="2024-06-16T23:33:26 IST" duration-ms="461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=giftCardPage status=SUCCESS method=GiftCardPageTest.giftCardPage()[pri:0, instance:testcases.GiftCardPageTest@40c80397] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.GiftCardPageTest -->
      <class name="testcases.AddToCartTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.AddToCartTest@56bca85b]" started-at="2024-06-16T23:32:19 IST" name="setup" finished-at="2024-06-16T23:32:20 IST" duration-ms="908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.AddToCartTest@56bca85b]" started-at="2024-06-16T23:32:20 IST" name="setup" finished-at="2024-06-16T23:32:28 IST" duration-ms="8278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddToCartTest.addToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addToCartTest()[pri:0, instance:testcases.AddToCartTest@56bca85b]" started-at="2024-06-16T23:32:28 IST" name="addToCartTest" finished-at="2024-06-16T23:32:35 IST" duration-ms="6159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addToCartTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.AddToCartTest@56bca85b]" started-at="2024-06-16T23:32:35 IST" name="getResult" finished-at="2024-06-16T23:32:35 IST" duration-ms="529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addToCartTest status=SUCCESS method=AddToCartTest.addToCartTest()[pri:0, instance:testcases.AddToCartTest@56bca85b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="finishReport()[pri:0, instance:testcases.AddToCartTest@56bca85b]" started-at="2024-06-16T23:35:17 IST" name="finishReport" finished-at="2024-06-16T23:35:18 IST" duration-ms="737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finishReport -->
      </class> <!-- testcases.AddToCartTest -->
      <class name="testcases.ValidateSpecificationTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.ValidateSpecificationTest@662f5666]" started-at="2024-06-16T23:35:08 IST" name="setup" finished-at="2024-06-16T23:35:11 IST" duration-ms="3840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ValidateSpecificationTest.validateSpecification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateSpecification()[pri:0, instance:testcases.ValidateSpecificationTest@662f5666]" started-at="2024-06-16T23:35:11 IST" name="validateSpecification" finished-at="2024-06-16T23:35:16 IST" duration-ms="5090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSpecification -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.ValidateSpecificationTest@662f5666]" started-at="2024-06-16T23:35:16 IST" name="getResult" finished-at="2024-06-16T23:35:17 IST" duration-ms="500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSpecification status=SUCCESS method=ValidateSpecificationTest.validateSpecification()[pri:0, instance:testcases.ValidateSpecificationTest@662f5666] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.ValidateSpecificationTest -->
      <class name="testcases.FilterByBrandTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.FilterByBrandTest@726e5805]" started-at="2024-06-16T23:33:04 IST" name="setup" finished-at="2024-06-16T23:33:08 IST" duration-ms="3735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FilterByBrandTest.filterByBrand()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="filterByBrand()[pri:0, instance:testcases.FilterByBrandTest@726e5805]" started-at="2024-06-16T23:33:08 IST" name="filterByBrand" finished-at="2024-06-16T23:33:15 IST" duration-ms="6750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByBrand -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.FilterByBrandTest@726e5805]" started-at="2024-06-16T23:33:15 IST" name="getResult" finished-at="2024-06-16T23:33:15 IST" duration-ms="444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterByBrand status=SUCCESS method=FilterByBrandTest.filterByBrand()[pri:0, instance:testcases.FilterByBrandTest@726e5805] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.FilterByBrandTest -->
      <class name="testcases.ValidateProductTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.ValidateProductTest@2e11485]" started-at="2024-06-16T23:34:43 IST" name="setup" finished-at="2024-06-16T23:34:47 IST" duration-ms="3712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ValidateProductTest.validateProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateProduct()[pri:0, instance:testcases.ValidateProductTest@2e11485]" started-at="2024-06-16T23:34:47 IST" name="validateProduct" finished-at="2024-06-16T23:34:52 IST" duration-ms="5050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.ValidateProductTest@2e11485]" started-at="2024-06-16T23:34:52 IST" name="getResult" finished-at="2024-06-16T23:34:52 IST" duration-ms="245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateProduct status=SUCCESS method=ValidateProductTest.validateProduct()[pri:0, instance:testcases.ValidateProductTest@2e11485] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.ValidateProductTest -->
      <class name="testcases.PlaceOrderTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.PlaceOrderTest@7c2b6087]" started-at="2024-06-16T23:33:49 IST" name="setup" finished-at="2024-06-16T23:33:53 IST" duration-ms="4355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PlaceOrderTest.placeOrder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="placeOrder()[pri:0, instance:testcases.PlaceOrderTest@7c2b6087]" started-at="2024-06-16T23:33:53 IST" name="placeOrder" finished-at="2024-06-16T23:34:00 IST" duration-ms="7508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.PlaceOrderTest@7c2b6087]" started-at="2024-06-16T23:34:00 IST" name="getResult" finished-at="2024-06-16T23:34:01 IST" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrder status=SUCCESS method=PlaceOrderTest.placeOrder()[pri:0, instance:testcases.PlaceOrderTest@7c2b6087] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.PlaceOrderTest -->
      <class name="testcases.SortLowToHighTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.SortLowToHighTest@3b77a04f]" started-at="2024-06-16T23:34:25 IST" name="setup" finished-at="2024-06-16T23:34:28 IST" duration-ms="3800" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SortLowToHighTest.sortLowToHigh()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="sortLowToHigh()[pri:0, instance:testcases.SortLowToHighTest@3b77a04f]" started-at="2024-06-16T23:34:28 IST" name="sortLowToHigh" finished-at="2024-06-16T23:34:32 IST" duration-ms="3507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortLowToHigh -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.SortLowToHighTest@3b77a04f]" started-at="2024-06-16T23:34:32 IST" name="getResult" finished-at="2024-06-16T23:34:32 IST" duration-ms="343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sortLowToHigh status=SUCCESS method=SortLowToHighTest.sortLowToHigh()[pri:0, instance:testcases.SortLowToHighTest@3b77a04f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.SortLowToHighTest -->
      <class name="testcases.SelectCategoryTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.SelectCategoryTest@1c7fd41f]" started-at="2024-06-16T23:34:18 IST" name="setup" finished-at="2024-06-16T23:34:22 IST" duration-ms="4072" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SelectCategoryTest.selectCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="selectCategory()[pri:0, instance:testcases.SelectCategoryTest@1c7fd41f]" started-at="2024-06-16T23:34:22 IST" name="selectCategory" finished-at="2024-06-16T23:34:24 IST" duration-ms="1799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCategory -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.SelectCategoryTest@1c7fd41f]" started-at="2024-06-16T23:34:24 IST" name="getResult" finished-at="2024-06-16T23:34:25 IST" duration-ms="360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCategory status=SUCCESS method=SelectCategoryTest.selectCategory()[pri:0, instance:testcases.SelectCategoryTest@1c7fd41f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.SelectCategoryTest -->
      <class name="testcases.InvalidSearchTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.InvalidSearchTest@e077866]" started-at="2024-06-16T23:33:35 IST" name="setup" finished-at="2024-06-16T23:33:39 IST" duration-ms="4070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.InvalidSearchTest.invalidSearch()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="invalidSearch()[pri:0, instance:testcases.InvalidSearchTest@e077866]" started-at="2024-06-16T23:33:39 IST" name="invalidSearch" finished-at="2024-06-16T23:33:41 IST" duration-ms="2188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSearch -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.InvalidSearchTest@e077866]" started-at="2024-06-16T23:33:41 IST" name="getResult" finished-at="2024-06-16T23:33:42 IST" duration-ms="241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidSearch status=SUCCESS method=InvalidSearchTest.invalidSearch()[pri:0, instance:testcases.InvalidSearchTest@e077866] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.InvalidSearchTest -->
      <class name="testcases.HomePageLogoFailTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.HomePageLogoFailTest@4b672daa]" started-at="2024-06-16T23:33:26 IST" name="setup" finished-at="2024-06-16T23:33:30 IST" duration-ms="4423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HomePageLogoFailTest.homePageLogoFail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="homePageLogoFail()[pri:0, instance:testcases.HomePageLogoFailTest@4b672daa]" started-at="2024-06-16T23:33:30 IST" name="homePageLogoFail" finished-at="2024-06-16T23:33:30 IST" duration-ms="16" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Failed test case] but found [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Failed test case] but found [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at testcases.HomePageLogoFailTest.homePageLogoFail(HomePageLogoFailTest.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homePageLogoFail -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.HomePageLogoFailTest@4b672daa]" started-at="2024-06-16T23:33:30 IST" name="getResult" finished-at="2024-06-16T23:33:31 IST" duration-ms="502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homePageLogoFail status=FAILURE method=HomePageLogoFailTest.homePageLogoFail()[pri:0, instance:testcases.HomePageLogoFailTest@4b672daa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.HomePageLogoFailTest -->
      <class name="testcases.SearchForProductTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.SearchForProductTest@a8e6492]" started-at="2024-06-16T23:34:12 IST" name="setup" finished-at="2024-06-16T23:34:15 IST" duration-ms="3956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SearchForProductTest.searchForProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchForProduct()[pri:0, instance:testcases.SearchForProductTest@a8e6492]" started-at="2024-06-16T23:34:15 IST" name="searchForProduct" finished-at="2024-06-16T23:34:18 IST" duration-ms="2469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.SearchForProductTest@a8e6492]" started-at="2024-06-16T23:34:18 IST" name="getResult" finished-at="2024-06-16T23:34:18 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchForProduct status=SUCCESS method=SearchForProductTest.searchForProduct()[pri:0, instance:testcases.SearchForProductTest@a8e6492] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.SearchForProductTest -->
      <class name="testcases.FilterByAmountTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.FilterByAmountTest@1fcb4808]" started-at="2024-06-16T23:32:55 IST" name="setup" finished-at="2024-06-16T23:32:59 IST" duration-ms="3749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FilterByAmountTest.filterByAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="filterByAmount()[pri:0, instance:testcases.FilterByAmountTest@1fcb4808]" started-at="2024-06-16T23:32:59 IST" name="filterByAmount" finished-at="2024-06-16T23:33:04 IST" duration-ms="4807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.FilterByAmountTest@1fcb4808]" started-at="2024-06-16T23:33:04 IST" name="getResult" finished-at="2024-06-16T23:33:04 IST" duration-ms="262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterByAmount status=SUCCESS method=FilterByAmountTest.filterByAmount()[pri:0, instance:testcases.FilterByAmountTest@1fcb4808] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.FilterByAmountTest -->
      <class name="testcases.ClearFilterTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.ClearFilterTest@22b53226]" started-at="2024-06-16T23:32:50 IST" name="setup" finished-at="2024-06-16T23:32:53 IST" duration-ms="2302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ClearFilterTest.clearFilterTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="clearFilterTest()[pri:0, instance:testcases.ClearFilterTest@22b53226]" started-at="2024-06-16T23:32:53 IST" name="clearFilterTest" finished-at="2024-06-16T23:32:55 IST" duration-ms="1841" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found in the current frame
  (Session info: chrome=125.0.6422.142)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [eb75ec8c5f552250774add5a539cb23f, sendKeysToElement {id=f.8845C18F852AE8BF484A96E008358B16.d.6C6FB0B899326EEA6F385F818570F6A4.e.1, value=[Ljava.lang.CharSequence;@603cabc4}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.142, chrome: {chromedriverVersion: 125.0.6422.141 (4b1e8393712..., userDataDir: C:\Users\MUKULC~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60429}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60429/devtoo..., se:cdpVersion: 125.0.6422.142, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (eb75ec8c5f552250774add5a539cb23f)] -> css selector: input[title="Search for Products, Brands and More"]]
Session ID: eb75ec8c5f552250774add5a539cb23f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found in the current frame
  (Session info: chrome=125.0.6422.142)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [eb75ec8c5f552250774add5a539cb23f, sendKeysToElement {id=f.8845C18F852AE8BF484A96E008358B16.d.6C6FB0B899326EEA6F385F818570F6A4.e.1, value=[Ljava.lang.CharSequence;@603cabc4}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.142, chrome: {chromedriverVersion: 125.0.6422.141 (4b1e8393712..., userDataDir: C:\Users\MUKULC~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60429}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60429/devtoo..., se:cdpVersion: 125.0.6422.142, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (eb75ec8c5f552250774add5a539cb23f)] -> css selector: input[title="Search for Products, Brands and More"]]
Session ID: eb75ec8c5f552250774add5a539cb23f
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:110)
at pages.HomePage.searchForProduct(HomePage.java:31)
at testcases.ClearFilterTest.clearFilterTest(ClearFilterTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearFilterTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.ClearFilterTest@22b53226]" started-at="2024-06-16T23:32:55 IST" name="getResult" finished-at="2024-06-16T23:32:55 IST" duration-ms="432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clearFilterTest status=FAILURE method=ClearFilterTest.clearFilterTest()[pri:0, instance:testcases.ClearFilterTest@22b53226] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.ClearFilterTest -->
      <class name="testcases.HomePageLogoTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.HomePageLogoTest@ea9b7c6]" started-at="2024-06-16T23:33:31 IST" name="setup" finished-at="2024-06-16T23:33:35 IST" duration-ms="3834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HomePageLogoTest.homePageLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="homePageLogo()[pri:0, instance:testcases.HomePageLogoTest@ea9b7c6]" started-at="2024-06-16T23:33:35 IST" name="homePageLogo" finished-at="2024-06-16T23:33:35 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homePageLogo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.HomePageLogoTest@ea9b7c6]" started-at="2024-06-16T23:33:35 IST" name="getResult" finished-at="2024-06-16T23:33:35 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homePageLogo status=SUCCESS method=HomePageLogoTest.homePageLogo()[pri:0, instance:testcases.HomePageLogoTest@ea9b7c6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.HomePageLogoTest -->
      <class name="testcases.RemoveFromCartTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.RemoveFromCartTest@3fffff43]" started-at="2024-06-16T23:34:01 IST" name="setup" finished-at="2024-06-16T23:34:05 IST" duration-ms="4014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.RemoveFromCartTest.removeFromCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="removeFromCartTest()[pri:0, instance:testcases.RemoveFromCartTest@3fffff43]" started-at="2024-06-16T23:34:05 IST" name="removeFromCartTest" finished-at="2024-06-16T23:34:11 IST" duration-ms="6173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeFromCartTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.RemoveFromCartTest@3fffff43]" started-at="2024-06-16T23:34:11 IST" name="getResult" finished-at="2024-06-16T23:34:12 IST" duration-ms="467" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=removeFromCartTest status=SUCCESS method=RemoveFromCartTest.removeFromCartTest()[pri:0, instance:testcases.RemoveFromCartTest@3fffff43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.RemoveFromCartTest -->
      <class name="testcases.LoginTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.LoginTest@ed3068a]" started-at="2024-06-16T23:33:42 IST" name="setup" finished-at="2024-06-16T23:33:45 IST" duration-ms="3755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginTest.login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="login()[pri:0, instance:testcases.LoginTest@ed3068a]" started-at="2024-06-16T23:33:45 IST" name="login" finished-at="2024-06-16T23:33:48 IST" duration-ms="2552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.LoginTest@ed3068a]" started-at="2024-06-16T23:33:48 IST" name="getResult" finished-at="2024-06-16T23:33:49 IST" duration-ms="654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LoginTest.login()[pri:0, instance:testcases.LoginTest@ed3068a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.LoginTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
