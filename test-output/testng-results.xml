<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="19" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-16T23:52:31 IST" name="Suite" finished-at="2024-06-16T23:55:55 IST" duration-ms="203901">
    <groups>
    </groups>
    <test started-at="2024-06-16T23:52:31 IST" name="Test" finished-at="2024-06-16T23:55:55 IST" duration-ms="203901">
      <class name="testcases.CheckPaginationTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.CheckPaginationTest@7e985ce9]" started-at="2024-06-16T23:55:18 IST" name="setup" finished-at="2024-06-16T23:55:22 IST" duration-ms="4722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CheckPaginationTest.checkPagination()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkPagination()[pri:0, instance:testcases.CheckPaginationTest@7e985ce9]" started-at="2024-06-16T23:55:22 IST" name="checkPagination" finished-at="2024-06-16T23:55:27 IST" duration-ms="4617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPagination -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.CheckPaginationTest@7e985ce9]" started-at="2024-06-16T23:55:27 IST" name="getResult" finished-at="2024-06-16T23:55:27 IST" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPagination status=SUCCESS method=CheckPaginationTest.checkPagination()[pri:0, instance:testcases.CheckPaginationTest@7e985ce9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.CheckPaginationTest -->
      <class name="testcases.UpdateCartCountTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.UpdateCartCountTest@7c351808]" started-at="2024-06-16T23:54:37 IST" name="setup" finished-at="2024-06-16T23:54:42 IST" duration-ms="5334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.UpdateCartCountTest.updateCartCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateCartCount()[pri:0, instance:testcases.UpdateCartCountTest@7c351808]" started-at="2024-06-16T23:54:42 IST" name="updateCartCount" finished-at="2024-06-16T23:54:52 IST" duration-ms="9455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCartCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.UpdateCartCountTest@7c351808]" started-at="2024-06-16T23:54:52 IST" name="getResult" finished-at="2024-06-16T23:54:52 IST" duration-ms="673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateCartCount status=SUCCESS method=UpdateCartCountTest.updateCartCount()[pri:0, instance:testcases.UpdateCartCountTest@7c351808] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.UpdateCartCountTest -->
      <class name="testcases.CheckMoreTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.CheckMoreTest@569bf9eb]" started-at="2024-06-16T23:53:51 IST" name="setup" finished-at="2024-06-16T23:53:55 IST" duration-ms="3954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CheckMoreTest.checkMore()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkMore()[pri:0, instance:testcases.CheckMoreTest@569bf9eb]" started-at="2024-06-16T23:53:55 IST" name="checkMore" finished-at="2024-06-16T23:53:57 IST" duration-ms="1505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMore -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.CheckMoreTest@569bf9eb]" started-at="2024-06-16T23:53:57 IST" name="getResult" finished-at="2024-06-16T23:53:57 IST" duration-ms="422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMore status=SUCCESS method=CheckMoreTest.checkMore()[pri:0, instance:testcases.CheckMoreTest@569bf9eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.CheckMoreTest -->
      <class name="testcases.AddToCartTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.AddToCartTest@42b64ab8]" started-at="2024-06-16T23:55:05 IST" name="setup" finished-at="2024-06-16T23:55:10 IST" duration-ms="5027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddToCartTest.addToCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addToCartTest()[pri:0, instance:testcases.AddToCartTest@42b64ab8]" started-at="2024-06-16T23:55:10 IST" name="addToCartTest" finished-at="2024-06-16T23:55:17 IST" duration-ms="6961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addToCartTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.AddToCartTest@42b64ab8]" started-at="2024-06-16T23:55:17 IST" name="getResult" finished-at="2024-06-16T23:55:18 IST" duration-ms="552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addToCartTest status=SUCCESS method=AddToCartTest.addToCartTest()[pri:0, instance:testcases.AddToCartTest@42b64ab8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.AddToCartTest -->
      <class name="testcases.ValidateRatingsTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.ValidateRatingsTest@180e6ac4]" started-at="2024-06-16T23:54:52 IST" name="setup" finished-at="2024-06-16T23:54:59 IST" duration-ms="6305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ValidateRatingsTest.validateRatings()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateRatings()[pri:0, instance:testcases.ValidateRatingsTest@180e6ac4]" started-at="2024-06-16T23:54:59 IST" name="validateRatings" finished-at="2024-06-16T23:55:05 IST" duration-ms="5948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRatings -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.ValidateRatingsTest@180e6ac4]" started-at="2024-06-16T23:55:05 IST" name="getResult" finished-at="2024-06-16T23:55:05 IST" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRatings status=SUCCESS method=ValidateRatingsTest.validateRatings()[pri:0, instance:testcases.ValidateRatingsTest@180e6ac4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.ValidateRatingsTest -->
      <class name="testcases.GiftCardPageTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.GiftCardPageTest@545de5a4]" started-at="2024-06-16T23:53:05 IST" name="setup" finished-at="2024-06-16T23:53:07 IST" duration-ms="2182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.GiftCardPageTest.giftCardPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="giftCardPage()[pri:0, instance:testcases.GiftCardPageTest@545de5a4]" started-at="2024-06-16T23:53:07 IST" name="giftCardPage" finished-at="2024-06-16T23:53:14 IST" duration-ms="7326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- giftCardPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.GiftCardPageTest@545de5a4]" started-at="2024-06-16T23:53:14 IST" name="getResult" finished-at="2024-06-16T23:53:15 IST" duration-ms="501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=giftCardPage status=SUCCESS method=GiftCardPageTest.giftCardPage()[pri:0, instance:testcases.GiftCardPageTest@545de5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.GiftCardPageTest -->
      <class name="testcases.ValidateSpecificationTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.ValidateSpecificationTest@eb6449b]" started-at="2024-06-16T23:54:19 IST" name="setup" finished-at="2024-06-16T23:54:28 IST" duration-ms="8583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ValidateSpecificationTest.validateSpecification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateSpecification()[pri:0, instance:testcases.ValidateSpecificationTest@eb6449b]" started-at="2024-06-16T23:54:28 IST" name="validateSpecification" finished-at="2024-06-16T23:54:36 IST" duration-ms="8401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSpecification -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.ValidateSpecificationTest@eb6449b]" started-at="2024-06-16T23:54:36 IST" name="getResult" finished-at="2024-06-16T23:54:37 IST" duration-ms="569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSpecification status=SUCCESS method=ValidateSpecificationTest.validateSpecification()[pri:0, instance:testcases.ValidateSpecificationTest@eb6449b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.ValidateSpecificationTest -->
      <class name="testcases.FilterByBrandTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.FilterByBrandTest@3a320ade]" started-at="2024-06-16T23:52:30 IST" name="setup" finished-at="2024-06-16T23:52:31 IST" duration-ms="759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.FilterByBrandTest@3a320ade]" started-at="2024-06-16T23:52:31 IST" name="setup" finished-at="2024-06-16T23:52:35 IST" duration-ms="4249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FilterByBrandTest.filterByBrand()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="filterByBrand()[pri:0, instance:testcases.FilterByBrandTest@3a320ade]" started-at="2024-06-16T23:52:35 IST" name="filterByBrand" finished-at="2024-06-16T23:52:42 IST" duration-ms="6703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByBrand -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.FilterByBrandTest@3a320ade]" started-at="2024-06-16T23:52:42 IST" name="getResult" finished-at="2024-06-16T23:52:42 IST" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterByBrand status=SUCCESS method=FilterByBrandTest.filterByBrand()[pri:0, instance:testcases.FilterByBrandTest@3a320ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="finishReport()[pri:0, instance:testcases.FilterByBrandTest@3a320ade]" started-at="2024-06-16T23:55:55 IST" name="finishReport" finished-at="2024-06-16T23:55:56 IST" duration-ms="673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finishReport -->
      </class> <!-- testcases.FilterByBrandTest -->
      <class name="testcases.ValidateProductTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.ValidateProductTest@2a39fe6a]" started-at="2024-06-16T23:55:27 IST" name="setup" finished-at="2024-06-16T23:55:32 IST" duration-ms="4908" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ValidateProductTest.validateProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateProduct()[pri:0, instance:testcases.ValidateProductTest@2a39fe6a]" started-at="2024-06-16T23:55:32 IST" name="validateProduct" finished-at="2024-06-16T23:55:38 IST" duration-ms="5854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.ValidateProductTest@2a39fe6a]" started-at="2024-06-16T23:55:38 IST" name="getResult" finished-at="2024-06-16T23:55:39 IST" duration-ms="727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateProduct status=SUCCESS method=ValidateProductTest.validateProduct()[pri:0, instance:testcases.ValidateProductTest@2a39fe6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.ValidateProductTest -->
      <class name="testcases.PlaceOrderTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.PlaceOrderTest@410ae9a3]" started-at="2024-06-16T23:55:39 IST" name="setup" finished-at="2024-06-16T23:55:44 IST" duration-ms="5050" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PlaceOrderTest.placeOrder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="placeOrder()[pri:0, instance:testcases.PlaceOrderTest@410ae9a3]" started-at="2024-06-16T23:55:44 IST" name="placeOrder" finished-at="2024-06-16T23:55:54 IST" duration-ms="10505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.PlaceOrderTest@410ae9a3]" started-at="2024-06-16T23:55:54 IST" name="getResult" finished-at="2024-06-16T23:55:55 IST" duration-ms="577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrder status=SUCCESS method=PlaceOrderTest.placeOrder()[pri:0, instance:testcases.PlaceOrderTest@410ae9a3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.PlaceOrderTest -->
      <class name="testcases.SortLowToHighTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.SortLowToHighTest@bcec031]" started-at="2024-06-16T23:52:42 IST" name="setup" finished-at="2024-06-16T23:52:46 IST" duration-ms="3943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SortLowToHighTest.sortLowToHigh()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="sortLowToHigh()[pri:0, instance:testcases.SortLowToHighTest@bcec031]" started-at="2024-06-16T23:52:46 IST" name="sortLowToHigh" finished-at="2024-06-16T23:52:51 IST" duration-ms="4578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortLowToHigh -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.SortLowToHighTest@bcec031]" started-at="2024-06-16T23:52:51 IST" name="getResult" finished-at="2024-06-16T23:52:51 IST" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sortLowToHigh status=SUCCESS method=SortLowToHighTest.sortLowToHigh()[pri:0, instance:testcases.SortLowToHighTest@bcec031] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.SortLowToHighTest -->
      <class name="testcases.InvalidSearchTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.InvalidSearchTest@32f0fba8]" started-at="2024-06-16T23:52:58 IST" name="setup" finished-at="2024-06-16T23:53:02 IST" duration-ms="4246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.InvalidSearchTest.invalidSearch()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="invalidSearch()[pri:0, instance:testcases.InvalidSearchTest@32f0fba8]" started-at="2024-06-16T23:53:02 IST" name="invalidSearch" finished-at="2024-06-16T23:53:04 IST" duration-ms="2148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSearch -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.InvalidSearchTest@32f0fba8]" started-at="2024-06-16T23:53:04 IST" name="getResult" finished-at="2024-06-16T23:53:05 IST" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidSearch status=SUCCESS method=InvalidSearchTest.invalidSearch()[pri:0, instance:testcases.InvalidSearchTest@32f0fba8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.InvalidSearchTest -->
      <class name="testcases.SelectCategoryTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.SelectCategoryTest@21005f6c]" started-at="2024-06-16T23:52:51 IST" name="setup" finished-at="2024-06-16T23:52:55 IST" duration-ms="4016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SelectCategoryTest.selectCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="selectCategory()[pri:0, instance:testcases.SelectCategoryTest@21005f6c]" started-at="2024-06-16T23:52:55 IST" name="selectCategory" finished-at="2024-06-16T23:52:57 IST" duration-ms="2275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCategory -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.SelectCategoryTest@21005f6c]" started-at="2024-06-16T23:52:57 IST" name="getResult" finished-at="2024-06-16T23:52:58 IST" duration-ms="539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCategory status=SUCCESS method=SelectCategoryTest.selectCategory()[pri:0, instance:testcases.SelectCategoryTest@21005f6c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.SelectCategoryTest -->
      <class name="testcases.HomePageLogoFailTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.HomePageLogoFailTest@3faf2e7d]" started-at="2024-06-16T23:53:37 IST" name="setup" finished-at="2024-06-16T23:53:40 IST" duration-ms="3542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HomePageLogoFailTest.homePageLogoFail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="homePageLogoFail()[pri:0, instance:testcases.HomePageLogoFailTest@3faf2e7d]" started-at="2024-06-16T23:53:40 IST" name="homePageLogoFail" finished-at="2024-06-16T23:53:40 IST" duration-ms="64" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Failed test case] but found [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Failed test case] but found [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at testcases.HomePageLogoFailTest.homePageLogoFail(HomePageLogoFailTest.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homePageLogoFail -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.HomePageLogoFailTest@3faf2e7d]" started-at="2024-06-16T23:53:41 IST" name="getResult" finished-at="2024-06-16T23:53:41 IST" duration-ms="244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homePageLogoFail status=FAILURE method=HomePageLogoFailTest.homePageLogoFail()[pri:0, instance:testcases.HomePageLogoFailTest@3faf2e7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.HomePageLogoFailTest -->
      <class name="testcases.FilterByAmountTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.FilterByAmountTest@76ba13c]" started-at="2024-06-16T23:54:08 IST" name="setup" finished-at="2024-06-16T23:54:12 IST" duration-ms="4438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.FilterByAmountTest.filterByAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="filterByAmount()[pri:0, instance:testcases.FilterByAmountTest@76ba13c]" started-at="2024-06-16T23:54:12 IST" name="filterByAmount" finished-at="2024-06-16T23:54:19 IST" duration-ms="6204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.FilterByAmountTest@76ba13c]" started-at="2024-06-16T23:54:19 IST" name="getResult" finished-at="2024-06-16T23:54:19 IST" duration-ms="709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterByAmount status=SUCCESS method=FilterByAmountTest.filterByAmount()[pri:0, instance:testcases.FilterByAmountTest@76ba13c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.FilterByAmountTest -->
      <class name="testcases.SearchForProductTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.SearchForProductTest@29ef6856]" started-at="2024-06-16T23:53:15 IST" name="setup" finished-at="2024-06-16T23:53:19 IST" duration-ms="4061" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SearchForProductTest.searchForProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchForProduct()[pri:0, instance:testcases.SearchForProductTest@29ef6856]" started-at="2024-06-16T23:53:19 IST" name="searchForProduct" finished-at="2024-06-16T23:53:22 IST" duration-ms="3178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.SearchForProductTest@29ef6856]" started-at="2024-06-16T23:53:22 IST" name="getResult" finished-at="2024-06-16T23:53:22 IST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchForProduct status=SUCCESS method=SearchForProductTest.searchForProduct()[pri:0, instance:testcases.SearchForProductTest@29ef6856] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.SearchForProductTest -->
      <class name="testcases.ClearFilterTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.ClearFilterTest@ab7a938]" started-at="2024-06-16T23:53:22 IST" name="setup" finished-at="2024-06-16T23:53:26 IST" duration-ms="3920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.ClearFilterTest.clearFilterTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="clearFilterTest()[pri:0, instance:testcases.ClearFilterTest@ab7a938]" started-at="2024-06-16T23:53:26 IST" name="clearFilterTest" finished-at="2024-06-16T23:53:36 IST" duration-ms="9831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearFilterTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.ClearFilterTest@ab7a938]" started-at="2024-06-16T23:53:36 IST" name="getResult" finished-at="2024-06-16T23:53:37 IST" duration-ms="560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clearFilterTest status=SUCCESS method=ClearFilterTest.clearFilterTest()[pri:0, instance:testcases.ClearFilterTest@ab7a938] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.ClearFilterTest -->
      <class name="testcases.HomePageLogoTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.HomePageLogoTest@61526469]" started-at="2024-06-16T23:53:57 IST" name="setup" finished-at="2024-06-16T23:54:01 IST" duration-ms="3673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.HomePageLogoTest.homePageLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="homePageLogo()[pri:0, instance:testcases.HomePageLogoTest@61526469]" started-at="2024-06-16T23:54:01 IST" name="homePageLogo" finished-at="2024-06-16T23:54:01 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homePageLogo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.HomePageLogoTest@61526469]" started-at="2024-06-16T23:54:01 IST" name="getResult" finished-at="2024-06-16T23:54:01 IST" duration-ms="310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homePageLogo status=SUCCESS method=HomePageLogoTest.homePageLogo()[pri:0, instance:testcases.HomePageLogoTest@61526469] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.HomePageLogoTest -->
      <class name="testcases.LoginTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.LoginTest@274872f8]" started-at="2024-06-16T23:54:01 IST" name="setup" finished-at="2024-06-16T23:54:05 IST" duration-ms="3834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginTest.login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="login()[pri:0, instance:testcases.LoginTest@274872f8]" started-at="2024-06-16T23:54:05 IST" name="login" finished-at="2024-06-16T23:54:08 IST" duration-ms="2539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.LoginTest@274872f8]" started-at="2024-06-16T23:54:08 IST" name="getResult" finished-at="2024-06-16T23:54:08 IST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LoginTest.login()[pri:0, instance:testcases.LoginTest@274872f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.LoginTest -->
      <class name="testcases.RemoveFromCartTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:testcases.RemoveFromCartTest@4648ce9]" started-at="2024-06-16T23:53:41 IST" name="setup" finished-at="2024-06-16T23:53:45 IST" duration-ms="3862" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.RemoveFromCartTest.removeFromCartTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="removeFromCartTest()[pri:0, instance:testcases.RemoveFromCartTest@4648ce9]" started-at="2024-06-16T23:53:45 IST" name="removeFromCartTest" finished-at="2024-06-16T23:53:51 IST" duration-ms="6132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeFromCartTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testcases.RemoveFromCartTest@4648ce9]" started-at="2024-06-16T23:53:51 IST" name="getResult" finished-at="2024-06-16T23:53:51 IST" duration-ms="435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=removeFromCartTest status=SUCCESS method=RemoveFromCartTest.removeFromCartTest()[pri:0, instance:testcases.RemoveFromCartTest@4648ce9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testcases.RemoveFromCartTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
